title Weather Application
actor user


participant MainWindow

participant On_WeatherButton_clicked()


participant Getcity()
participant Getunit()
participant Mycurlmanager

participant CacheManager

participant MyJsonManager

participant ApplicationConsole




activate user
user->MainWindow:WeatherButton clicked
activate MainWindow
MainWindow->On_WeatherButton_clicked():WeatherButton Clicked Event()

activate On_WeatherButton_clicked()


On_WeatherButton_clicked()->Getcity():Getcity()
activate Getcity()
On_WeatherButton_clicked()<--Getcity():City name
deactivate Getcity()



On_WeatherButton_clicked()->Getunit():Getunit
activate Getunit()
On_WeatherButton_clicked()<--Getunit():City name
deactivate Getunit()






On_WeatherButton_clicked()->Mycurlmanager:ChangeCity(City name)
On_WeatherButton_clicked()->Mycurlmanager:ChangeUnits(Units)


space
alt compare last API call time to current time and the city user requested 
On_WeatherButton_clicked()->Mycurlmanager:MycurlManager.GetResponse()

activate Mycurlmanager

On_WeatherButton_clicked()<--Mycurlmanager:Response
deactivate Mycurlmanager

deactivate MyJsonManager
On_WeatherButton_clicked()->CacheManager:WriteCache(Response)
else

end



On_WeatherButton_clicked()->CacheManager:GetCache()
activate CacheManager
space
On_WeatherButton_clicked()<--CacheManager:Response
deactivate CacheManager
space
On_WeatherButton_clicked()->MyJsonManager:ParseandSave(Response)
activate MyJsonManager
alt Check if parsed Ok
case 1
On_WeatherButton_clicked()<--MyJsonManager:Write City Name on UI to show
On_WeatherButton_clicked()<--MyJsonManager:Write Temp on UI to show
On_WeatherButton_clicked()<--MyJsonManager:Write Description on UI to show
else 
case 2

ApplicationConsole <--MyJsonManager:Failed to parse JSON response
deactivate MyJsonManager
end

deactivate MyJsonManager

MainWindow<--On_WeatherButton_clicked():Display_event()
deactivate MainWindow
deactivate On_WeatherButton_clicked()
user<-MainWindow:Weather Data Displayed
deactivate user